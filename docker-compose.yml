services:
  xiaolian-server:
    # build指令会告诉Docker Compose使用指定上下文目录中的Dockerfile来构建镜像
    build:
      # **修正**: 将构建上下文设置为项目根目录 ('.')
      # 这样Dockerfile就可以访问到根目录下的任何文件，如 requirements.lock.txt
      context: .
      # **修正**: 明确指定Dockerfile的位置
      dockerfile: ./apps/server/Dockerfile

    # container_name给容器一个固定的、友好的名字
    container_name: xiaolian_server

    # ports指令将主机的端口映射到容器的端口
    # 格式是 "主机端口:容器端口"
    # 这允许我们通过本地的http://localhost:8000访问容器内的FastAPI应用
    ports:
      - "8000:8000"

    # --- 卷(Volumes) ---
    # 卷用于将主机的文件系统路径挂载到容器内部
    # 这对于开发(代码热重载)和数据持久化至关重要
    volumes:
      # 将服务器的源代码目录挂载到容器的/app目录
      # 这使得在本地修改Python代码后，uvicorn可以自动重载，无需重建镜像
      - ./apps/server:/app
      # 将本地的录音文件夹挂载到容器的/app/recordings目录
      # 这样，所有在容器内保存到/app/recordings的录音文件都会出现在本地文件系统中
      - ./apps/server/recordings:/app/recordings

    # restart策略定义了容器在退出时的行为
    # "unless-stopped"表示除非手动停止容器，否则它在意外退出后会自动重启
    restart: unless-stopped
